#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
from dotenv import load_dotenv
from openai import OpenAI

load_dotenv()

client = OpenAI(api_key=os.getenv('OPENAI_API_KEY'))

print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GPT-5...")
print()

# –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
test_message = "–ü—Ä–∏–≤–µ—Ç! –¢—ã GPT-5? –†–∞—Å—Å–∫–∞–∂–∏ –∫—Ä–∞—Ç–∫–æ –æ —Å–≤–æ–∏—Ö –≥–ª–∞–≤–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏—è—Ö –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å GPT-4."

print(f"–í–æ–ø—Ä–æ—Å: {test_message}")
print()
print("–û—Ç–≤–µ—Ç –æ—Ç GPT-5:")
print("-" * 60)

try:
    response = client.chat.completions.create(
        model="gpt-5",
        messages=[
            {"role": "user", "content": test_message}
        ],
        max_completion_tokens=500
    )

    answer = response.choices[0].message.content
    print(answer)
    print("-" * 60)
    print()
    print(f"‚úì –ú–æ–¥–µ–ª—å: {response.model}")
    print(f"‚úì –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: {response.usage.total_tokens}")
    print(f"  - –ó–∞–ø—Ä–æ—Å: {response.usage.prompt_tokens}")
    print(f"  - –û—Ç–≤–µ—Ç: {response.usage.completion_tokens}")

except Exception as e:
    print(f"‚úó –û—à–∏–±–∫–∞: {e}")
